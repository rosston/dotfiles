#!/bin/bash

set -e

[[ -e script/setup ]] || {
  echo >&2 "Please cd into the dotfiles repo before running this script."
  exit 1
}

items_to_link=(
  ".atom"
  ".bash_profile"
  ".bashrc"
  ".config"
  ".emacs.d"
  ".gitconfig"
  ".inputrc"
  ".local/bin"
  ".tmux.conf"
  ".vim"
  ".vimrc"
  ".zprofile"
  ".zshrc"
)

safely_link () {
  src=$1
  dest=$2

  if [ -L "$dest" ]; then
    rm "$dest"
  elif [ -e "$dest" ]; then
    mv "$dest" "${dest}.orig"
  fi

  ln -s "$src" "$dest"
}

safely_mkdir () {
  dir=$1

  if [ ! -d "$dir" ]; then
    mkdir "$dir"
  fi
}

install_neovim () {
  curl -fLO https://github.com/neovim/neovim/releases/download/v0.5.1/nvim.appimage
  chmod u+x nvim.appimage
  ./nvim.appimage --appimage-extract
  rm -rf nvim.appimage
  safely_link "${PWD}/squashfs-root/usr/bin/nvim" "${PWD}/.local/bin/nvim"

  pip3 install pynvim

  "${PWD}/.local/bin/nvim" +PlugInstall +qall
}

custom_config () {
  item="$1"

  case $item in
    .config)
      safely_link "${HOME}/.vim" "${HOME}/.config/nvim"
      ;;
    .tmux.conf)
      # Set up TPM
      tmux_plugins_dir="${HOME}/.tmux/plugins"
      tpm_dir="${tmux_plugins_dir}/tpm"
      if [ ! -d "$tmux_plugins_dir" ]; then
        mkdir -p "$tmux_plugins_dir"
      fi
      if [ ! -d "$tpm_dir" ]; then
        git clone https://github.com/tmux-plugins/tpm "$tpm_dir"
      fi

      # Set up dwm.tmux
      git clone https://github.com/saysjonathan/dwm.tmux.git /tmp/dwm.tmux
      cd /tmp/dwm.tmux
      sudo make
      cd -
      rm -rf /tmp/dwm.tmux
      ;;
    .vim)
      # Set up tmp dir
      vim_tmp_dir="${HOME}/.vim/tmp"
      if [ ! -d "$vim_tmp_dir" ]; then
        mkdir -p "$vim_tmp_dir/backup"
        mkdir -p "$vim_tmp_dir/swap"
      fi

      # Install vim-plug
      autoload_dir="${HOME}/.vim/autoload"
      if [ ! -d "$autoload_dir" ]; then
        mkdir "$autoload_dir"
      fi
      curl -fLo "${autoload_dir}/plug.vim" \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

      # If in a Codespace, install neovim
      if [ "$CODESPACES" = "true" ]; then
        install_neovim
      fi
      ;;
    *)
      ;;
  esac
}

# Need to create this early so we can link to .local/bin
safely_mkdir "${HOME}/.local"

for item in ${items_to_link[@]}; do
  src="${PWD}/${item}"
  dest="$HOME/${item}"

  safely_link $src $dest

  custom_config $item
done
